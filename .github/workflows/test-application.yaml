name: Test application

on:
    pull_request:
    push:
        branches:
            - '[0-9]+.[0-9]+'
            - '[0-9]+.x'

jobs:
    php:
        name: 'Run tests with php ${{ matrix.php-version }}'
        runs-on: ubuntu-latest

        strategy:
            fail-fast: false
            matrix:
                include:
                    - php-version: '5.6'
                      lint: false
                      symfony-version: '^2.8'

                    - php-version: '7.2'
                      lint: false
                      symfony-version: '^3.4'

                    - php-version: '7.3'
                      lint: false
                      symfony-version: '^4.4'

                    - php-version: '7.4'
                      lint: true
                      symfony-version: '^5.0'

        services:
            elasticsearch5:
                image: elasticsearch:5.6
                ports:
                    - 9200:9200
                env:
                    discovery.type: 'single-node'
                    xpack.security.enabled: 'false'
                options: --health-cmd="curl http://localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=5

        steps:
            - name: Checkout project
              uses: actions/checkout@v2

            - name: Install and configure PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-version }}
                  tools: 'composer'

            - name: Get composer cache directory
              id: composer-cache-dir
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache dependencies
              uses: actions/cache@v2
              id: composer-cache
              with:
                  path: ${{ steps.composer-cache-dir.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-

            - name: Install dependencies
              run: |
                  composer validate --strict
                  composer require --no-update symfony/symfony:${{ matrix.symfony-version }}
                  composer install --no-interaction --prefer-dist

            - name: Fix code style
              if: ${{ matrix.lint }}
              run: vendor/bin/phpcs -p --standard=PSR2 --ignore=vendor/ ./

            - name: Run tests
              run: vendor/bin/phpunit --coverage-clover=coverage.clover

            - name: Upload coverage results to Coveralls
              run: vendor/bin/php-coveralls
              env:
                  # Running coveralls with default config did not work so followed the workaround below:
                  # https://github.com/php-coveralls/php-coveralls/issues/273#issuecomment-537473525
                  COVERALLS_RUN_LOCALLY: 1
                  COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
